# 1. Import the "City_Air_Quality.csv" dataset.
import pandas as pd


# 2. Explore the dataset to understand its structure and content.
aqi = pd.read_csv('https://raw.githubusercontent.com/gaikwadshantanu12/adypsoe_aids/refs/heads/master/BE/DMV_Practicals/datasets/data.csv',encoding = "ISO-8859-1")

aqi.head()

aqi.columns

aqi.shape

aqi.info()

aqi['date'] = pd.to_datetime(aqi['date'])

aqi.describe()


# 3. Identify the relevant variables for visualizing AQI trends, such as date, pollutant levels, and AQI values.
num_cols = ['so2', 'no2', 'rspm', 'spm', 'pm2_5']

for col in num_cols:
    aqi[col].fillna(aqi[col].mean(),inplace=True)

aqi.isna().sum()

aqi['year'] = aqi['date'].dt.year

aqi.head()


# 4. Create line plots or time series plots to visualize the overall AQI trend over time.
plt.figure(figsize=(10, 6))
plt.plot(x, label='PM2.5', color='blue')
plt.plot(y, label='PM10', color='green')
plt.title('AQI Trend Over Time')
plt.xlabel('Date')
plt.ylabel('Pollutant Levels')
plt.legend()
plt.grid(True)
plt.show()

no2= aqi.groupby('year').aggregate({'no2':'mean'})
so2= aqi.groupby('year').aggregate({'so2':'mean'})
pm10= aqi.groupby('year').aggregate({'rspm':'mean'})
spm= aqi.groupby('year').aggregate({'spm':'mean'})
pm2_5= aqi.groupby('year').aggregate({'pm2_5':'mean'})


# 5.Plot individual pollutant levels (e.g., PM2.5, PM10, CO) on separate line plots to visualize their trends over time.
# PM2.5
plt.figure(figsize=(5,4))
plt.plot(v, label='PM2.5', color='blue')
plt.title('PM2.5 Levels Over Time')
plt.xlabel('Date')
plt.ylabel('PM2.5 (µg/m³)')
plt.grid(True)
plt.show()

# PM10
plt.figure(figsize=(5,4))
plt.plot(z, label='PM10', color='green')
plt.title('PM10 Levels Over Time')
plt.xlabel('Date')
plt.ylabel('PM10 (µg/m³)')
plt.grid(True)
plt.show()

# SO2
plt.figure(figsize=(5,4))
plt.plot(y, label='SO2', color='red')
plt.title('SO2 Levels Over Time')
plt.xlabel('Date')
plt.ylabel('SO2 (µg/m³)')
plt.grid(True)
plt.show()

# NO2
plt.figure(figsize=(5,4))
plt.plot(x, label='NO2', color='orange')
plt.title('NO2 Levels Over Time')
plt.xlabel('Date')
plt.ylabel('NO2 (µg/m³)')
plt.grid(True)
plt.show()


# 6. Use bar plots or stacked bar plots to compare the AQI values across different dates or time periods.
plt.figure(figsize=(10, 5))
plt.bar(spm.index,spm.values.ravel(),color='purple')
plt.title('Average spm Levels on Different Dates')
plt.xlabel('Date')
plt.ylabel('Average spm (µg/m³)')
plt.xticks(rotation=90)
plt.show()

plt.figure(figsize=(10, 5))
plt.bar(no2.index,no2.values.ravel(),color='green')
plt.title('Average NO2 Levels on Different Dates')
plt.xlabel('Date')
plt.ylabel('Average NO2 (µg/m³)')
plt.xticks(rotation=90)
plt.show()


# 7.Create box plots or violin plots to analyze the distribution of AQI values for different pollutant categories.
import seaborn as sns

sns.boxplot(pm10)

sns.boxplot(no2)

sns.violinplot(pm10)


# 8. Use scatter plots or bubble charts to explore the relationship between AQI values and pollutant levels.
plt.scatter(no2.values,so2.values,color='green')
plt.xlabel('no2')
plt.ylabel('so2')
plt.title('no2 vs so2');