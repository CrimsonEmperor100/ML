# Necessary imports
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns


# dataset loading
from sklearn.datasets import load_digits
data = load_digits().data
target = load_digits().target


data.shape, target.shape

# Plot the digit
plt.imshow(data[0].reshape(8,8))
plt.title(target[0])
plt.show()

# Plot the digit
plt.imshow(data[1690].reshape(8,8))
plt.title(target[1690])
plt.show()

# Each class and their unique elements
np.unique(target,return_counts=True)

# Train test split
split = int(0.8 * len(data))
X_train,y_train = data[:split,:], target[:split]
X_test,y_test = data[split:,:],target[split:]

X_train.shape,X_test.shape,y_train.shape,y_test.shape


from sklearn.preprocessing import StandardScaler
from sklearn import svm
from sklearn.metrics import confusion_matrix

sc = StandardScaler()
sc.fit_transform(X_train)
sc.transform(X_test)

model = svm.SVC()
model.fit(X_train,y_train)

model.score(X_test,y_test)

sns.heatmap(confusion_matrix(y_test,model.predict(X_test)),annot=True,cmap = 'viridis')
