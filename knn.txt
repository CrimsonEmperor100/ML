import pandas as pd, numpy as np
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
import seaborn as sns

data = pd.read_csv('Social_Network_Ads.csv')

data.head()

data.shape

data.isnull().sum()

sd = StandardScaler()

x = data.drop('Purchased',axis=1)
y = data['Purchased']

x.shape , y.shape

x [['Age','EstimatedSalary']] = sd.fit_transform(x[['Age','EstimatedSalary']])

enc = LabelEncoder()
x['Gender'] = enc.fit_transform(x['Gender'])

x = x.drop('User ID',axis=1)
x.head()

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.20,random_state=1)

knn = KNeighborsClassifier()
knn.fit(x_train,y_train)
knn.predict(x_test)

accuracy = knn.score(x_test,y_test)
print('Accuracy :',accuracy)

y_pred = knn.predict(x_test)
print(classification_report(y_test,y_pred))

confusion_matrix(y_test,y_pred)

error = 1 - accuracy
print('Error_rate : ', error)

sns.heatmap(confusion_matrix(y_test,y_pred),annot=True,cmap='viridis')